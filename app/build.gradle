apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.arch.qvikapplication"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
    androidExtensions {
        experimental = true
    }
}

dependencies {

    implementation project(':base')

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"

    // android
    implementation "androidx.core:core-ktx:$versions.core_ktx"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
    implementation "androidx.appcompat:appcompat:$versions.appcompat"

    //lifecycle
    implementation "android.arch.lifecycle:common-java8:$versions.lifecycle"
    implementation "android.arch.lifecycle:extensions:$versions.lifecycle"

    //navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$versions.navigation"
    implementation "com.google.android.material:material:$versions.material"


    //Glide implementation
    implementation "com.github.bumptech.glide:glide:$versions.glide"
    annotationProcessor "com.github.bumptech.glide:compiler:$versions.glide"

    // dagger
    implementation "com.google.dagger:dagger:$versions.dagger"
    implementation "com.google.dagger:dagger-android:$versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"
    compileOnly "com.squareup.inject:assisted-inject-annotations-dagger2:$versions.assisted_inject"
    kapt "com.squareup.inject:assisted-inject-processor-dagger2:$versions.assisted_inject"

    // reactive
    implementation "io.reactivex.rxjava2:rxjava:$versions.rxjava"
    implementation "io.reactivex.rxjava2:rxandroid:$versions.rxandroid"
    implementation "io.reactivex.rxjava2:rxkotlin:$versions.rxkotlin"
    implementation "com.jakewharton.rxbinding3:rxbinding:$versions.rxbinding"

    //room
    kapt "androidx.room:room-compiler:$versions.roomVersion"
    implementation "androidx.room:room-runtime:$versions.roomVersion"
    implementation "androidx.room:room-ktx:$versions.roomVersion"
    implementation "androidx.room:room-rxjava2:$versions.roomVersion"

    //work
    implementation "androidx.work:work-runtime-ktx:$versions.workVersion"

    // network
    implementation "com.squareup.okhttp3:okhttp:$versions.okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"

    //google play services
    implementation "com.google.android.gms:play-services-location:$versions.play_service"
    implementation "com.google.android.gms:play-services-places:$versions.play_service"

    //gson
    implementation "com.google.code.gson:gson:$versions.google_gson"

    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.3.41'


    //coroutine
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutineVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutineVersion"

    // test
    testImplementation "junit:junit:$versions.junit"
    testImplementation "androidx.test:core:$versions.test_core"
    testImplementation "androidx.test.ext:junit:$versions.test_junit"
    testImplementation "androidx.test:rules:$versions.test_core"
    testImplementation "org.mockito:mockito-core:$versions.mockito"
    testImplementation "org.mockito:mockito-inline:$versions.mockito"
    testImplementation "android.arch.core:core-testing:$versions.lifecycle"
    testImplementation "org.robolectric:robolectric:$versions.robolectric"
    testImplementation "androidx.arch.core:core-testing:$versions.testing_version_core"
    debugImplementation "androidx.fragment:fragment-testing:$versions.fragment_test_version"

    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso_core"
    androidTestImplementation "androidx.test:runner:$versions.runner"
    androidTestImplementation "org.mockito:mockito-android:$versions.mockito"
    androidTestImplementation "androidx.test.ext:junit:$versions.test_junit"
    androidTestImplementation "androidx.annotation:annotation:$versions.androidx_annotation"
    androidTestImplementation "androidx.work:work-testing:$versions.workVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$versions.testing_version_core"
}

